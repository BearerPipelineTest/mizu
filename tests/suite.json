{
  "py/object": "__main__.Suite",
  "queries": [
    {
      "py/object": "__main__.Query",
      "query": "",
      "number_of_records": 21678,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 8593,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp",
      "number_of_records": 3608,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 257,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"connection start\"",
      "number_of_records": 152,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"connection close\" and request.replyText == \"kthxbai\"",
      "number_of_records": 92,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"connection start\" and request.versionMajor == \"0\" and request.versionMinor == \"9\"",
      "number_of_records": 152,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"queue declare\" and request.queue == \"test-integration-declared-passive-queue\"",
      "number_of_records": 2,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and request.redelivered == \"false\" and request.routingKey == \"test-corrupted-message-regression\"",
      "number_of_records": 624,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and timestamp >= datetime(\"02/03/2022, 9:02:18.034 AM\") and timestamp <= datetime(\"02/03/2022, 9:02:32.634 AM\")",
      "number_of_records": 19,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and src.port == \"49346\" and dst.port == \"5672\"",
      "number_of_records": 1,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"basic publish\" and summary == \"not-existing-exchange\" and src.port == \"49332\" and dst.port == \"5672\" and timestamp >= datetime(\"02/03/2022, 9:02:17.935 AM\")",
      "number_of_records": 180,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"basic publish\" and summary == \"not-existing-exchange\" and request.routingKey == \"some-key\"",
      "number_of_records": 1974,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"queue bind\" and summary == \"test-basic-ops-queue\"",
      "number_of_records": 4,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"exchange declare\" and summary == \"test-integration-declared-passive-exchange\" and request.autoDelete == \"true\" and request.durable == \"false\" and request.exchange == \"test-integration-declared-passive-exchange\" and request.internal == \"false\" and request.noWait == \"false\" and request.passive == \"true\" and request.type == \"direct\"",
      "number_of_records": 2,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"queue declare\" and summary == \"test-integration-declared-passive-queue\" and request.autoDelete == \"true\" and request.durable == \"true\" and request.exclusive == \"false\" and request.noWait == \"false\" and request.queue == \"true\" and request.queue == \"test-integration-declared-passive-queue\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"connection close\" and summary == \"NOT_IMPLEMENTED - active=false\" and request.classId == \"20\" and request.methodId == \"20\" and request.replyCode == \"\" and request.replyText == \"NOT_IMPLEMENTED - active=false\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"basic consume\" and summary == \"test.integration.consumer-flow\" and timestamp >= datetime(\"02/03/2022, 9:02:01.291 AM\") and request.consumerTag == \"ctag-/tmp/go-build1228491040/b001/amqp.test-7\" and request.queue == \"test.integration.consumer-flow\"",
      "number_of_records": 1,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"connection start\" and request.locales == \"en_US\" and request.mechanisms == \"PLAIN AMQPLAIN\" and request.versionMinor == \"9\" and request.serverProperties[\"cluster_name\"] == \"rabbit@rabbitmq-5bcbb547d7-s96zn\" and request.serverProperties[\"platform\"] == \"Erlang/OTP\" and request.serverProperties[\"product\"] == \"RabbitMQ\" and request.serverProperties[\"version\"] == \"3.6.8\"",
      "number_of_records": 26,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"queue declare\" and request.autoDelete == \"false\" and request.durable == \"false\" and request.exclusive == \"false\" and request.noWait == \"false\" and request.queue == \"false\" and request.queue == \"shipping\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"exchange declare\" and request.exchange == \"topic_logs_shipping\" and request.durable == \"false\" and request.autoDelete == \"false\" and request.type == \"topic\" and request.passive == \"false\" and request.noWait == \"false\" and request.internal == \"false\"",
      "number_of_records": 26,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"queue bind\" and summary == \"shipping\" and request.exchange == \"topic_logs_shipping\" and request.noWait == \"false\" and request.queue == \"shipping\" and request.routingKey == \"#\"",
      "number_of_records": 26,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"basic consume\" and summary == \"shipping\" and request.consumerTag == \"ctag1.9b14474a0d1044baadd191fe45de9bcb\" and request.exclusive == \"false\" and request.noAck == \"true\" and request.noLocal == \"false\" and request.noWait == \"false\" and request.queue == \"shipping\"",
      "number_of_records": 2,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"basic publish\" and summary == \"topic_logs_shipping\" and request.exchange == \"topic_logs_shipping\" and request.immediate == \"false\" and request.mandatory == \"false\" and request.routingKey == \"key0\" and request.properties.contentType == \"text/html\" and request.properties.headers[\"hdr0\"] == \"hdr_val0\" and request.body == \"value0\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"basic deliver\" and summary == \"topic_logs_shipping\" and request.consumerTag == \"ctag1.9b14474a0d1044baadd191fe45de9bcb\" and request.exchange == \"topic_logs_shipping\" and request.redelivered == \"false\" and request.routingKey == \"key0\" and request.properties.contentType == \"text/html\" and request.properties.headers[\"hdr0\"] == \"hdr_val0\" and request.body == \"value0\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "amqp and method == \"connection close\" and summary == \"Normal shutdown\" and request.replyText == \"Normal shutdown\" and request.classId == \"0\" and request.methodId == \"0\" and request.replyCode == \"\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc",
      "number_of_records": 104,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 104,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and timestamp >= datetime(\"02/04/2022, 5:15:18.343 PM\") and timestamp <= datetime(\"02/04/2022, 5:15:18.545 PM\")",
      "number_of_records": 10,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and request.method == \"GetFeature\" and request.path == \"/routeguide.RouteGuide/GetFeature\" and request.pathSegments[1] == \"GetFeature\" and request.headers[\":method\"] == \"POST\" and response.status == 0 and response.statusText == \"OK\" and response.headers[\":status\"] == \"200\"",
      "number_of_records": 42,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and request.method == \"ListFeatures\" and request.path == \"/routeguide.RouteGuide/ListFeatures\" and request.pathSegments[1] == \"ListFeatures\" and request.headers[\":method\"] == \"POST\" and request.headers[\"Content-Type\"] == \"application/grpc\" and response.status == 0 and response.statusText == \"OK\"",
      "number_of_records": 21,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and request.method == \"RecordRoute\" and request.path == \"/routeguide.RouteGuide/RecordRoute\" and request.pathSegments[1] == \"RecordRoute\" and response.status == 0 and response.headers[\":status\"] == \"200\"",
      "number_of_records": 20,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and request.method == \"RouteChat\" and request.path == \"/routeguide.RouteGuide/RouteChat\" and request.pathSegments[0] == \"routeguide.RouteGuide\" and request.headers[\":scheme\"] == \"http\" and request.headers[\":authority\"] == \"mizutest-grpc-py-server:50051\" and response.status == 0 and response.statusText == \"OK\" and response.headers[\"Content-Type\"] == \"application/grpc\"",
      "number_of_records": 21,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "grpc and dst.name == \"mizutest-grpc-py-server:50051\"",
      "number_of_records": 104,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http",
      "number_of_records": 3803,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "http and timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 3790,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"GET\" and request.path == \"/health\" and response.status == 200 and response.statusText == \"OK\"",
      "number_of_records": 132,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"GET\" and request.path == \"/ready\" and request.targetUri == \"/ready\" and request.headers[\"User-Agent\"] == \"kube-probe/1.21\" and response.status == 200 and response.statusText == \"OK\" and response.content.text == \"OK\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"GET\" and request.path == \"/\" and request.targetUri == \"/\" and request.headers[\"Host\"] == \"172.17.0.20:8079\" and request.headers[\"User-Agent\"] == \"kube-probe/1.21\" and response.status == 200 and response.statusText == \"OK\" and response.headers[\"Content-Length\"] == \"8688\" and response.headers[\"Content-Type\"] == \"text/html; charset=UTF-8\"",
      "number_of_records": 40,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"POST\" and request.path == \"/carts/y9naz5ppDN_rXW78YYzOmJcSQatwFBJs/items\" and request.pathSegments[0] == \"carts\" and request.pathSegments[1] == \"y9naz5ppDN_rXW78YYzOmJcSQatwFBJs\" and request.pathSegments[2] == \"items\" and request.headers[\"Connection\"] == \"close\" and request.headers[\"Content-Length\"] == \"64\" and request.headers[\"Content-Type\"] == \"application/json\" and response.status == 201 and response.statusText == \"Created\" and response.headers[\"Content-Type\"] == \"application/json;charset=UTF-8\"",
      "number_of_records": 302,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"POST\" and request.path == \"/cart\" and request.headers[\"Accept-Encoding\"] == \"gzip, deflate\" and request.headers[\"Accept\"] == \"*/*\" and request.headers[\"User-Agent\"] == \"python-requests/2.25.1\" and response.status == 201 and response.statusText == \"Created\" and request.postData.text.json().id == \"510a0d7e-8e83-4193-b483-e27e09ddc34d\"",
      "number_of_records": 6,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"GET\" and request.path == \"/basket.html\" and request.headers[\"Accept-Encoding\"] == \"gzip, deflate\" and request.headers[\"Connection\"] == \"keep-alive\" and request.headers[\"User-Agent\"] == \"python-requests/2.25.1\" and response.status == 200 and response.statusText == \"OK\" and response.headers[\"Accept-Ranges\"] == \"bytes\" and response.headers[\"Content-Type\"] == \"text/html; charset=UTF-8\" and response.content.text.startsWith(\"<!DOCTYPE html>\")",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"POST\" and request.path == \"/orders\" and request.headers[\"User-Agent\"] == \"python-requests/2.25.1\" and request.headers[\"Host\"] == \"192.168.49.2:30001\" and response.status == 500 and response.statusText == \"Internal Server Error\" and src.name == \"\" and dst.name == \"\" and response.headers[\"Content-Length\"] == \"44\" and response.content.text.json().message == \"User not logged in.\"",
      "number_of_records": 100,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"GET\" and request.path == \"/catalogue\" and request.headers[\"Host\"] == \"catalogue\" and request.headers[\"Connection\"] == \"close\" and response.status == 200 and response.statusText == \"OK\" and response.content.text.json()[0].name == \"Holy\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"GET\" and request.path == \"/login\" and request.headers[\"Authorization\"] == \"[REDACTED]\" and response.status == 401 and response.statusText == \"Unauthorized\" and response.content.text.json().status_code == 401 and response.content.text.json().error == \"Unauthorized\"",
      "number_of_records": 537,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"DELETE\" and request.path == \"/carts/y9naz5ppDN_rXW78YYzOmJcSQatwFBJs\" and request.pathSegments[0] == \"carts\" and request.pathSegments[1] == \"y9naz5ppDN_rXW78YYzOmJcSQatwFBJs\" and request.headers[\"Host\"] == \"carts\" and response.status == 202 and response.statusText == \"Accepted\"",
      "number_of_records": 542,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"DELETE\" and request.path == \"/cart\" and request.headers[\"User-Agent\"] == \"python-requests/2.25.1\" and response.status == 202 and response.statusText == \"Accepted\"",
      "number_of_records": 101,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http and request.method == \"POST\" and request.path == \"/carts/y9naz5ppDN_rXW78YYzOmJcSQatwFBJs/items\" and request.pathSegments[1] == \"y9naz5ppDN_rXW78YYzOmJcSQatwFBJs\" and request.postData.text.json().itemId == \"zzz4f044-b040-410d-8ead-4de0446aec7e\" and request.postData.text.json().unitPrice == 12 and response.status == 201 and response.statusText == \"Created\" and response.headers[\"X-Application-Context\"] == \"carts:80\" and response.content.text.json().itemId == \"zzz4f044-b040-410d-8ead-4de0446aec7e\" and response.content.text.json().unitPrice == 12 and response.content.text.json().unitPrice == 12",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "http2",
      "number_of_records": 110,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "http2 and timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 104,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka",
      "number_of_records": 8811,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 364,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Produce\" and request.apiVersion == \"8\" and request.correlationID == \"2\" and request.payload.topicData.partitions.partitionData.records.recordBatch[\"firstTimestamp\"] == 1643962317412",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Fetch\" and request.apiVersion == \"11\" and request.size == \"104\" and request.payload.maxBytes == \"262144\" and request.payload.topics[0].partitions[0][\"fetchOffset\"] == 640",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"ApiVersions\" and request.apiVersion == \"0\" and request.correlationID == \"1\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"ListOffsets\" and request.apiVersion == \"1\" and summary == \"kafka-go-4619ebd3231b3901\" and response.correlationID == \"3\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Metadata\" and request.apiVersion == \"1\" and request.correlationID == \"2\" and request.size == \"94\" and response.payload.brokers == \"[{\"host\":\"localhost\",\"nodeId\":0,\"port\":9092,\"rack\":\"\"}]\" and response.payload.controllerID == \"0\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Produce\" and request.apiVersion == \"7\" and request.clientID == \"kafka-go.test@Corsair (github.com/segmentio/kafka-go)\" and request.correlationID == \"13\" and request.size == \"183\" and request.payload.timeout == \"2147483647\" and request.payload.transactionalID == 1 and request.payload.topicData.partitions.partitionData.records.recordBatch[\"firstTimestamp\"] == 1643962320535 and request.payload.topicData.partitions.partitionData.records.recordBatch.record[0][\"attributes\"] == 0 and request.payload.topicData.partitions.partitionData.records.recordBatch.record[0].value == \"6\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Fetch\" and request.apiVersion == \"10\" and summary == \"kafka-go-260b77aad1937b0f\" and response.payload.responses[0].partitionResponses[0].recordSet.recordBatch.record[0].value == \"3\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Metadata\" and summary == \"invoicing\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"CreateTopics\" and request.payload.topics[0][\"name\"] == \"invoicing\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Produce\" and request.payload.topicData.partitions.partitionData.records.recordBatch.record[0][\"key\"] == \"key-one\" and request.payload.topicData.partitions.partitionData.records.recordBatch.record[0].value == \"one!\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"ListOffsets\" and summary == \"invoicing\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"Fetch\" and response.payload.responses[0].partitionResponses[0][\"errorCode\"] == 0 and response.payload.responses[0].partitionResponses[0].recordSet.recordBatch.record[0][\"key\"] == \"key-one\" and response.payload.responses[0].partitionResponses[0].recordSet.recordBatch.record[0].value == \"one!\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"CreateTopics\" and request.payload.topics[0][\"name\"] == \"topic1\" and request.payload.topics[1][\"name\"] == \"topic2\" and response.payload.topics[0][\"name\"] == \"topic1\" and response.payload.topics[1][\"name\"] == \"topic2\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"ApiVersions\" and request.clientID == \"produce@mizutest-kafka-go-74b885d986-p62n4 (github.com/segmentio/kafka-go)\" and response.payload.errorCode == \"0\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "kafka and request.apiKey == \"ApiVersions\" and request.clientID == \"consume@mizutest-kafka-go-74b885d986-p62n4 (github.com/segmentio/kafka-go)\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis",
      "number_of_records": 5346,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and timestamp >= datetime(\"02/04/2022, 5:14:40.448 PM\")",
      "number_of_records": 4078,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and method == \"PING\"",
      "number_of_records": 561,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and method == \"FLUSHDB\"",
      "number_of_records": 100,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"GET\" and request.key == \"counter3\"",
      "number_of_records": 8,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"MULTI\" and request.type == \"Array\"",
      "number_of_records": 38,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"SUBSCRIBE\" and request.key == \"mychannel1\"",
      "number_of_records": 1,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"PING\" and request.type == \"Array\"",
      "number_of_records": 561,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"GET\" and request.key == \"A\" and request.type == \"Array\"",
      "number_of_records": 7,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"DEL\" and request.key == \"A\" and request.type == \"Array\"",
      "number_of_records": 2,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"SET\" and request.key == \"key6\" and request.type == \"Array\" and request.value == \"value\"",
      "number_of_records": 2,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"INFO\" and request.key == \"keyspace\" and request.type == \"Array\" and response.type == \"Bulk String\" and response.value == \"# Keyspace\"",
      "number_of_records": 10,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and response.keyword == \"OK\" and response.type == \"Simple String\"",
      "number_of_records": 669,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"EVALSHA\" and request.key == \"b3b5be469962cc72e488ee86a39ed8b552e3ed35\" and request.type == \"Array\" and request.value == \"[1, key2, value]\" and response.type == \"Error\" and response.value == \"NoScriptError: NOSCRIPT No matching script. Please use EVAL.\"",
      "number_of_records": 2,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"EVAL\" and request.key == \"\n\t\t\t\tlocal r = redis.call('SET', KEYS[1], ARGV[1])\n\t\t\t\treturn r\n\t\t\t\" and request.type == \"Array\" and response.keyword == \"OK\" and response.type == \"Simple String\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"SCRIPT\" and request.key == \"flush\" and request.type == \"Array\"",
      "number_of_records": 8,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"SCRIPT\" and request.key == \"load\" and request.type == \"Array\" and request.value == \"return 'Unique script'\" and response.value == \"586deab7f5d7baecfdab4753abeff059e87bebe0\"",
      "number_of_records": 4,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"EXPIRE\" and request.key == \"D\" and request.type == \"Array\" and request.value == \"14400\" and response.type == \"Integer\" and response.value == \"1\"",
      "number_of_records": 2,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and (request.command == \"DBSIZE\" or request.command == \"TTL\" or request.command == \"WATCH\" or request.command == \"UNWATCH\")",
      "number_of_records": 38,
      "consistent": false
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"WATCH\" and request.key == \"{shard}key1\" and request.value == \"{shard}key2\"",
      "number_of_records": 1,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"SET\" and request.key == \";\ufffd\ufffdQ&\ufffd\ufffd\ufffd_\ufffdZ7\ufffd\u001e\u03c9;\ufffd;\ufffd\ufffd\ufffdsh\ufffd\ufffd\u0019\u0014\ufffd\ufffd\ufffd\u0001?\ufffd\ufffd.x\ufffd\ufffd\ufffd\ufffdW\ufffd;kE7\n!)\u001d\ufffdz7\ufffd\ufffd\u07ef\ufffdQe\u0016N\ufffd\"",
      "number_of_records": 0,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"AUTH\" and request.key == \"password1\" and response.type == \"Error\" and response.value == \"DataError: ERR AUTH <password> called without any password configured for the default user. Are you sure your configuration is correct?\"",
      "number_of_records": 3,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"CLIENT\" and request.key == \"setname\" and request.type == \"Array\" and request.value == \"foobar\"",
      "number_of_records": 1,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"CLIENT\" and request.key == \"getname\" and request.type == \"Array\" and response.type == \"Bulk String\" and response.value == \"foobar\"",
      "number_of_records": 1,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"SET\" and request.key == \"key\" and request.value == \"value\" and response.keyword == \"OK\" and response.type == \"Simple String\"",
      "number_of_records": 37,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"GET\" and request.key == \"key\" and request.type == \"Array\" and response.type == \"Bulk String\" and response.value == \"value\"",
      "number_of_records": 39,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"GET\" and request.key == \"key2\" and request.type == \"Array\" and response.type == \"Bulk String\"",
      "number_of_records": 38,
      "consistent": true
    },
    {
      "py/object": "__main__.Query",
      "query": "redis and request.command == \"EXPIRE\" and request.key == \"sess:y9naz5ppDN_rXW78YYzOmJcSQatwFBJs\" and request.type == \"Array\" and request.value == \"86400\" and response.type == \"Integer\" and response.value == 1",
      "number_of_records": 1985,
      "consistent": true
    }
  ]
}
